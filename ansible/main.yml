---
- name: Configure docker containers
  hosts: localhost
  gather_facts: no
  any_errors_fatal: true
  become: yes
  vars:
    network_name: automation_templates
    network_subnet: 172.31.1.0/24
    network_gateway: 172.31.1.1
    network_iprange: 172.31.1.0/24
    nginx_container_name: automation_nginx
    nginx_port: 80
    nginx_root: ../data
    nginx_config_file: ../config/nginx/nginx.conf
    nginx_default_file: ../config/nginx/conf.d/default.conf
    nginx_mime_types_file: ../config/nginx/mime.types
    template_directory: ../data/ova
    template_files:
      - https://storage.googleapis.com/workload-automation/templates/rhel-8.7-cloud-init.ova
      - https://storage.googleapis.com/workload-automation/templates/rhel-9.2-cloud-init.ova
      - https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.ova
    support_files_directory: ../data/files
    support_files:
      - https://storage.googleapis.com/workload-automation/dlm/dlm-4.1.0-1.el8.src.rpm
      - https://storage.googleapis.com/workload-automation/dlm/dlm-4.1.0-1.el8.x86_64.rpm
      - https://packages.confluent.io/archive/6.2/confluent-6.2.10.tar.gz
      - https://packages.confluent.io/archive/7.3/confluent-7.3.3.tar.gz
      - https://packages.confluent.io/archive/7.4/confluent-7.4.0.tar.gz

  tasks:
    - name: Create network with custom IPAM config
      community.docker.docker_network:
        name: "{{ network_name }}"
        driver: bridge
        ipam_config:
          - subnet: "{{ network_subnet }}"
            gateway: "{{ network_gateway }}"
            iprange: "{{ network_iprange }}"

    - name: Create an Nginx container
      community.docker.docker_container:
        name: "{{ nginx_container_name }}"
        image: nginx
        restart_policy: always
        ports:
          - "80:{{ nginx_port }}"
        networks:
          - name: "{{ network_name }}"
        volumes:
          - "{{ nginx_root }}:/usr/share/nginx/html:ro"
          - "{{ nginx_config_file }}:/etc/nginx/nginx.conf:ro"
          - "{{ nginx_default_file }}:/etc/nginx/conf.d/default.conf:ro"
          - "{{ nginx_mime_types_file }}:/etc/nginx/mime.types:ro"

    - name: Download OVA templates
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "{{ template_directory }}"
        mode: '0444'
      with_items: "{{ template_files }}"

    - name: Download support files
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: "{{ support_files_directory }}"
        mode: '0444'
      with_items: "{{ support_files }}"
